Draem/Comment [
    slug: %enumerated-type-for-rebol2
    author: "Hostile Fork"
    date: 22-Jun-2009/16:21
    old-url: http://hostilefork.com/2009/06/13/enumerated-type-for-rebol2/#comment-929
]

[{Hello Gerard, you're welcome--and thanks for taking a look at this!
Certainly it is good to study a wide variety of programming languages before designing an all new one!  :)  A lot of people have thought about the best way to start, and this has resulted in things like LOGO and <a href="http://en.wikipedia.org/wiki/Karel_(programming_language)" rel="nofollow" target="_blank" class="liwikipedia">Karel the Robot</a>.  Rebol seems like a very good replacement for LISP in teaching.
But most every course introduce students to programming via some variant of "I'm controlling a robot out in empty space".  Though it can feel empowering, I don't think it's a good foundation--it emphasizes the power of single lines of code, instead of imagining how those manipulations are often at odds with a greater architecture.
So I feel like early programming education should start with something like the game <a href="http://en.wikipedia.org/wiki/The_Incredible_Machine" rel="nofollow" target="_blank" class="liwikipedia">The Incredible Machine</a>.  Then perhaps move to solving simple problems with <a href="http://hostilefork.com/2005/06/20/turing-thesis-laymans-terms/" rel="nofollow" class="liinternal">Turing Machines</a>.  These are better for teaching foundations of software because they emphasize problem-solving with <i>patterns</i>, rather than by <i>direct control of the CPU</i>.
Anyway...if you like the enum.r then please feel free to post it on the Rebol list (if you have something to say about it)!  I myself am busy trying to push other agenda items and meddling in other ways... :)}]
