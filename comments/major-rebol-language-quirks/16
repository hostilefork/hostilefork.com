Draem/Comment [
    slug: %major-rebol-language-quirks
    author: "Kaj"
    date: 17-Sep-2008/13:56
    old-url: http://hostilefork.com/2008/09/10/major-rebol-language-quirks/#comment-675
]

[{Please note that I'm not trying to sell you either Rebol or ORCA. You found them yourself and are enquiring about their state on your blog. I'm giving you some insight into what that state is. People in the Rebol community know very well that people who find that state dissatisfying are not going to change their minds about it. Yet, we decided that we still want to work with the technology because the benefits far outweigh the disadvantages. As I have tried to make clear, for each of us that is an educated guesstimate and some failsafes that we can put into place in case something goes against our expectations.
RT is not going to open source Rebol, at least not in the near future, and they are not going to sign legal documents giving legal rights away to competitors. I don't think I would even want them to, because it doesn't make business sense and would be a sign that they are not running their business properly. As it stands, they have been in business for eleven years. They are, however, releasing source code of their choice under open-source licenses of their choice. Those are products and legal documents you can work with. Decide for yourself if it's worth it to you and then take it or leave it. If you insist on having code to the core, build one yourself. If you want the project to be run differently, set one up yourself. The great paradox here is that everyone thinks Rebol is special, yet everyone seems to think that Carl should change the process that created it.
ORCA is available, it works, it's not finished, and it's not being developed quickly at the moment. One of the reasons it's not being developed is that it works for me. I'm happily using it to support two operating systems. When I find issues that block me, I fix them. Once I want more out of it, I'm going to do more work on it. Further, it's written in C. The engine is complete. It has its own garbage collector, it evaluates paths. It's great fun theorising about how it could be done differently, and if you like having such discussions, the Rebol community is a great place for you. But it would amount to writing yet another clone. There are two in C, one in Java, one in JavaScript and even a Rebol interpreter in Rebol. Personally, I would have done it in OCaml. Yet, ORCA is the only usable one, so I use it.}]
