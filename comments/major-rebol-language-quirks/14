Draem/Comment [
    slug: %major-rebol-language-quirks
    author: "Kaj"
    date: 17-Sep-2008/6:32
    old-url: http://hostilefork.com/2008/09/10/major-rebol-language-quirks/#comment-673
]

[{As happens so often when discussing innovative concepts such as Rebol, I have to step on the breaks here to correct a number of errors and misconceptions.
I will also remark that I find it funny to see your text above the form I'm typing this comment in:
"Please leave a valid email address, I promise I will not use it for anything evil."
In the same way, you promise not to betray our trust by putting ads on your site. Well, no problem, I am willing to believe you. Even if I just learned of your existence this week. - But why shouldn't I extend a bit of trust to other people as well; particularly someone who has been a public figure for almost a quarter century, who has contributed greatly to computer science, craft and society, who has helped me in my life and career through those products, and who is even occasionally helping me personally in business matters?
But first the misconceptions. I'd like to clarify what Graham said above. I am not the chief developer of ORCA [http://freshmeat.net/projects/Rebol-orca/]; Karl Robillard is. I am not even the chief developer of the Syllable operating system [http://web.syllable.org], although I am its co-leader together with its founder. I am the creator of the Syllable Server Linux-based operating system [http://distrowatch.com/syllable], though. Both these operating systems use ORCA in their core. Syllable Server also ships Rebol/Core and a number of open source frameworks on top of it, but is not dependent on it. We hope to use them to build your flying cars someday. ;-) 
As Richard Stallman tirelessly keeps reminding us, it's bad to heap patent law, copyright law, trademark law and contract law together (and maybe call it intellectual property), because they're very different. The Sun vs. Microsoft case you point to was about contract law, supported by copyright law and trademark law. MS simply signed a contract with Sun to get to use their Java code and broke the contract requirements. It even cost them a lot of effort to win, but Sun could never force an independent Java implementation to be compatible, or force them by law in other ways, if they don't sign a contract with Sun, don't steal their proprietary code, and don't violate their Java and Sun trademarks. Even under US law.
Nobody who worked on ORCA has a contract affecting it with RT.
No RT C code was used in ORCA's implementation (nobody outside RT even has it, probably even outside Carl, except for escrow). It's not always possible to have mezzanine functions that don't resemble the RT Rebol functions, especially if they're very small, but that in itself is a proof that such cases are not significant engineering efforts, so they wouldn't fall under copyright and patent law. I didn't even know that the mezzanines in the RT SDK seem to have a permissive license, but the goal of the ORCA mezzanines is to be independent implementations (which may in some cases even be necessitated by a different underlying implementation of ORCA).
Carl has stated that the language at a conceptual level is a form of communication and not patentable in the US. That certainly means it's not patentable in Europe, where software patents were eventually prevented. This is confirmed by many independent implementations of many other languages.
Presumably, RT could keep ORCA from explaining that it means "Open source Rebol Can be Achieved". The working name for my Linux distribution was Rebolinux, but since both Rebol and Linux are trademarked, it would have been asking for trouble to release it under that name. As I said, the name ORCA is overloaded and has to change, anyway.
On to technical misconceptions. I didn't say anything about ORCA's efficiency, and certainly not that I would want to match Rebol's by implementing mezzanines in C, instead. As far as I am concerned, the goals of ORCA are the same as those of Rebol, except for being open source. The level of implementation of each function, in C or in Rebol/ORCA, must be decided separately for each function in conjunction with the engine it's running on. If you do these things well and are not oblivious to computer science and engineering craft, there is no reason that ORCA would have to be significantly bigger or slower than Rebol.
I also don't see why an open-source Rebol project would be condemned to be run by "a skeletal crew". Open source language projects range from dead and buried to hundreds of contributors.
To conclude, I think you know that the only certainties in this life we're in are death and taxes. We must have a business sense about that. I don't think it's reasonable to ask a company to issue a statement with the goal of making it easier for others to compete with them, without getting anything in return. Carl wants us to help, without fracturing his core, which is a semantic platform that would be prevented from fulfilling its promise if everyone would have an incompatible implementation. This problem is very real, as Karl Robillard has already gone in a different direction after ORCA with this Thune language. Things get fishy very quickly. ;-) 
As I said before, apart from the core, RT releases many things under open-source licenses and in the public domain. Legally, it doesn't get clearer than this. You can use them under copyright law according to their licenses.
I am writing these comments under an email address I set up particularly for your blog. If you turn capitalistic on us, or what you call "evil", I can block it. I am including Rebol in Syllable, but I'm also including ORCA and making sure the base system is dependent on that and RT's open-source code, instead of the Rebol core.}]
