Draem/Comment [
    slug: %is-rebol-actually-a-revolution
    author: "Bo"
    date: 8-Aug-2010/20:41
    old-url: http://hostilefork.com/2008/09/08/is-rebol-actually-a-revolution/#comment-1227
]

[{I've been using Rebol for years (since v1.3 ca. 1998) and find that it has continually evolved into a better and better solution.  Incidentally, I also used to work at Rebol.  Also, I'm an idealist.
Since my employment at Rebol ended, I've continued to use the language in my consulting group.  I've written a number of commercial-quality apps that are in use in production environments today and rival products that do similar things written in other languages, but without the overhead.
One of Rebol's main strengths is that it seriously fights software complexity.  I've programmed in everything from 6502/6510 machine code to BASIC, COBOL, Pascal, PHP, Perl, C, AREXX and more.  Rebol is the only language that provides the power of C/C++ while making BASIC seem clunky and complex.  Includes?  DLLs/SOs?  Structures?  Declarations?  No thanks.  I'd rather that the language handled this for me.  Incidentally, I also like setting the thermostat in my Cadillac to 73 degrees and then not have to think about whether or not I need to modify the temperature because I feel too cold or hot.  I'd rather concentrate on driving.  Rebol is like that.
My largest standalone application written in Rebol with the interpreter encapsulated with the script is smaller than 1MB, and it is a VERY complex application that does things the nearest competitor application requires 20MB to do and involves a laborious install process.  My Rebol app runs off a flash drive with no installation.  Portable apps, anyone?  Of course, I could make an installer for it if I wanted, but why?  I hate the registry.
Carl is a true genius - hands down the smartest person I have ever met.  I worked with him nearly every day for three years.  If I had to pick one person responsible for the future of computing, it would not be Bill Gates, Steve Jobs or any of the other "big guns".  It would be Carl.  And I would feel secure that he would lead us in the right direction.  Think of Carl as the Messiah of the computing world.  Believe and you will be saved.
I remember one of my first days at the job.  Carl asked me to write an app in Rebol that performed a particular function using as few lines of code as possible.  No problem.  I'd written hundreds, if not thousands, of apps before.  Some were very small and efficient.  I presented him with an app that was written in 50 lines of code that performed what he requested flawlessly.  Carl said, "Good. Now do it in less than half that code."  My jaw dropped.  It was impossible.  I cut it down 10%, and said that was the best I could do.  Carl then showed me the true power of Rebol and we cut the app down 70% in size.  Amazing!  If you don't see the power of Rebol yet, I don't blame you.  I didn't either.
If you disagree, feel free to continue coding in whatever language you prefer.  I have not yet found a language I can code in faster and achieve better results with than Rebol.  Closed source?  Single point of failure?  Non-issues.  Most of Rebol is open source.  There are multiple ways of doing anything in Rebol, so if you don't like the way it does it natively using built-in method #1, develop your own method or use one of the multitude of other built-in methods.  If you don't like the 80's style interface, design your own.  I have.  It's easier than you think, because right now you are thinking only in terms of the languages you know.  The Rebol interpreters are freely downloadable.  Keep them on your flash drive, your web storage space, your backup hard drive.  You'll always have it, and it will only take up less than 1MB.  Forever.
If 600KB is too big for your finished application size, use the Rebol/SDK where you CAN use includes and other fancy stuff to cut it down to a fraction of that.
I think the emerging smartphone market would be an instant winner for Rebol.  Low CPU requirements, low memory requirements and easy to program.
I could write a book on this subject, but I need to get back to finishing my latest commercial app in Rebol.  Anecdotally, my consulting company has been making over $1000/mo. for four years providing a service to our clients of which Rebol is a healthy component.  In addition to this, we provide another service to our clients, and the non-rebol-based out-of-the-box software for that service cost our company $33,000 and is painfully closed-source AND a resource hog AND has a painfully limited number of licenses.  Fortunately, we make over $6000/mo. providing that service.  However, our new Rebol solution for this service (currently in beta-testing) is easier, faster, more reliable and more efficient (both to the computer as well as to our technicians), with far lower development costs.  This will allow us to increase our customer base utilizing our existing infrastructure, make more money and pay less.  I don't see the problem.}]